/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Tempest, TempestInterface } from "../Tempest";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "name",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "destination",
        type: "address",
      },
    ],
    name: "CacheUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "totalCommitments",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
    ],
    name: "Commitment",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "spendKeyCommitment",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    inputs: [],
    name: "FIELD_SIZE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_HISTORY_SIZE",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ZERO_VALUE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "commitments",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "spendKeyCommitment",
        type: "bytes32",
      },
    ],
    name: "computeCommitment",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentRootIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "spendKeyCommitment",
            type: "bytes32",
          },
        ],
        internalType: "struct Tempest.DepositArgs",
        name: "args",
        type: "tuple",
      },
    ],
    name: "deposit",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "depositVerifier",
    outputs: [
      {
        internalType: "contract DepositVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feePool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "filledSubtrees",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDependencies",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "addresses",
        type: "bytes32[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IHasher",
        name: "_hasher",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_left",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_right",
        type: "bytes32",
      },
    ],
    name: "hashLeftRight",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "hasher",
    outputs: [
      {
        internalType: "contract IHasher",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isAddressCacheFresh",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "isKnownRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "levels",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "nullifierHashes",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numCommitments",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rebuildAddressCache",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "roots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256[24]",
            name: "_proof",
            type: "uint256[24]",
          },
          {
            internalType: "bytes32",
            name: "_nullifierHash",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "_root",
            type: "bytes32",
          },
          {
            internalType: "address payable",
            name: "_recipient",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "_relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "_relayerFeeETH",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "_refund",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "tokenA",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amountA",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "tokenB",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amountB",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "commitment",
            type: "bytes32",
          },
        ],
        internalType: "struct Tempest.SwapArgs",
        name: "args",
        type: "tuple",
      },
    ],
    name: "swap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "swapVerifier",
    outputs: [
      {
        internalType: "contract SwapVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256[2]",
            name: "_pA",
            type: "uint256[2]",
          },
          {
            internalType: "uint256[2][2]",
            name: "_pB",
            type: "uint256[2][2]",
          },
          {
            internalType: "uint256[2]",
            name: "_pC",
            type: "uint256[2]",
          },
          {
            internalType: "uint256[8]",
            name: "_pubSignals",
            type: "uint256[8]",
          },
          {
            internalType: "uint256",
            name: "nullifierHash",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "assetId",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "assetAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "root",
            type: "bytes32",
          },
          {
            internalType: "address payable",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "relayerFeeETH",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "refund",
            type: "uint256",
          },
        ],
        internalType: "struct Tempest.WithdrawArgs",
        name: "args",
        type: "tuple",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawVerifier",
    outputs: [
      {
        internalType: "contract WithdrawVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "i",
        type: "uint256",
      },
    ],
    name: "zeros",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461003157600380546001600160401b0319169055610bb8600455600060065561214d90816100378239f35b600080fdfe6040608081526004908136101561001557600080fd5b600091823560e01c90816316440e33146110ba57816317cc915c1461108d57816326120c881461106857816327e99a5c1461102157816337a4e7d414610b295781633c81a34514610acf578163414a37ba14610a9457816346b92a5b14610a7757816349ce899714610a4f5781634ecf518b14610a295781636d9833e314610a005781638129fc1c14610841578163864eb164146108145781638901404d146106375781638a4068dd146106235781638de533a41461057e5781638ea3099e1461054557816390eeb02b14610520578163978bbdb914610502578163a0ea7a57146104e3578163ae2e933b146104b5578163ba70f75714610487578163c2b40ae41461045f578163cd87a3b414610443578163d186ab0f1461024e578163e829558814610224578163ec732959146101e9578163ed33639f146101c1578163f178e47c14610195575063fc7e9c6f1461016d57600080fd5b346101915781600319360112610191576003549051602091821c63ffffffff168152f35b5080fd5b9050346101bd5760203660031901126101bd5760209282913581526001845220549051908152f35b8280fd5b505034610191578160031936011261019157905490516001600160a01b039091168152602090f35b505034610191578160031936011261019157602090517f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c8152f35b82843461024b57602036600319011261024b575061024460209235611b03565b9051908152f35b80fd5b9050346101bd576103003660031901126101bd576001600160a01b03610272611593565b8351636490cd3d60e11b815292911683828481013782604486868284015b6002831061042a575090508293915060c4808401376101006101048084013760209485916102049485915afa9081156104205786916103f3575b50156103b15735906102de61026435611a67565b15610360578185526005835260ff848620541661030c57508352600590528120805460ff1916600117905580f35b835162461bcd60e51b8152908101839052602860248201527f74656d706573743a20546865206e6f746520686173206265656e20616c726561604482015267191e481cdc195b9d60c21b6064820152608490fd5b835162461bcd60e51b8152908101839052602560248201527f74656d706573743a2043616e6e6f742066696e6420796f7572206d65726b6c65604482015264081c9bdbdd60da1b6064820152608490fd5b50915162461bcd60e51b815291820152601c60248201527f74656d706573743a2070726f6f6620766572696679206661696c6564000000006044820152606490fd5b6104139150843d8611610419575b61040b81836112c5565b810190611698565b386102ca565b503d610401565b85513d88823e3d90fd5b8394508082600194958193370193019101868693610290565b50503461019157816003193601126101915760209051601e8152f35b9050346101bd5760203660031901126101bd5760209282913581526002845220549051908152f35b5050346101915781600319360112610191578060209263ffffffff6003541681526002845220549051908152f35b5050346101915781600319360112610191576020906104d26114ac565b90516001600160a01b039091168152f35b5050346101915781600319360112610191576020906006549051908152f35b9050346101bd57826003193601126101bd5760209250549051908152f35b50503461019157816003193601126101915760209063ffffffff600354169051908152f35b9050346101bd5760603660031901126101bd5735916001600160a01b038316830361024b57506102446020926044359060243590611893565b919050346101bd57826003193601126101bd57602092506b29bbb0b82b32b934b334b2b960a11b91826000526000805160206120d8833981519152845260018060a01b03826000205416928251906000805160206120f8833981519152868301526039820152603981526105f181611293565b83156105ff57505051908152f35b61061f9085935193849362461bcd60e51b85528401526024830190611355565b0390fd5b833461024b578060031936011261024b5780f35b919050346101bd5760603660031901126101bd578051916060830183811067ffffffffffffffff8211176107ff57825261066f611278565b938484526020948585019260243584528486019260443584528551636eb1769f60e11b81523383820152306024820152888160448160018060a01b038098165afa9081156107f55782916107c8575b50855111610792578783885116926064875191848a5196879485936323b872dd60e01b8552339085015230602485015260448401525af1908115610787575061076a575b5061072a818651168451906107248551928561071c61153c565b169283611893565b90611893565b94610734866116b0565b50511691519051917fa3ac334776aca8fe808f5c1634b30338e4789e218a9f82700019b6647df54d5e868551878152a451908152f35b61078090873d89116104195761040b81836112c5565b5038610702565b8651903d90823e3d90fd5b855162461bcd60e51b8152808301899052601060248201526f6572726f723a20616c6c6f77616e636560801b6044820152606490fd5b90508881813d83116107ee575b6107df81836112c5565b810103126101915751386106be565b503d6107d5565b87513d84823e3d90fd5b604182634e487b7160e01b6000525260246000fd5b5050346101915781600319360112610191576020906001600160a01b03610839611593565b169051908152f35b9050346101bd57826003193601126101bd577fb5e75f33363faba579acfe081959ecc5e5146fdb7f8fdd04645b64e0213ce402546001600160a01b039081169182156109bd5783518093638da5cb5b60e01b8252818360209687935afa80156104205783918791610990575b5016330361093b5750601560a01b906108c461153c565b85546001600160c01b031916911617178355825b63ffffffff8116601581101561090b5790816108f661090693611b03565b9086526001845284862055611868565b6108d8565b847f29d7ed391256ccc3ea596c86e933b89ff339d25ea8ddced975ae2fe30b5296d4856002868480525282205580f35b835162461bcd60e51b8152908101839052602960248201527f6e696163696e3a206f6e6c79206465706c6f7965722063616e20287265292d696044820152686e697469616c697a6560b81b6064820152608490fd5b6109b09150853d87116109b6575b6109a881836112c5565b810190611336565b386108ad565b503d61099e565b606490602085519162461bcd60e51b8352820152601f60248201527f6e696163696e3a2070726f7879206973206e6f7420636f6e66696775726564006044820152fd5b82843461024b57602036600319011261024b5750610a2060209235611a67565b90519015158152f35b50503461019157816003193601126101915763ffffffff6020925460a01c169051908152f35b9050346101bd5760203660031901126101bd5760209282913581526007845220549051908152f35b505034610191578160031936011261019157602090610a20611395565b505034610191578160031936011261019157602090517f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018152f35b505034610191578160031936011261019157610ae96115f6565b815192839260208080860192818752855180945286019401925b828110610b1257505050500390f35b835185528695509381019392810192600101610b03565b838334610191576104a0366003190112610191578051926101c0840167ffffffffffffffff8582108183111761100e573660231215610fe3576104c0860182811082821117610ffb5784528161030492368411610fe75784905b848210610feb57505086529035602080870191909152906001600160a01b0390610324358281168103610fe757858801526103443560608801526103643560808801526103843595828716870361024b5760a096878901526103a43583811681036101915760c08901526103c43560e08901526103e43561010089015261040435978389168903610191576101208101988952610424359061014081019382855261044435908682168203610fe35761016083019182526103e86101a06101808501946104643586520194610484358652049560039c878e80990298818a041490151715610fd05788815116978c8a610c7a6114ac565b91519163a9059cbb60e01b8352168d8201528b8160249b848d830152818c5a92604493f18015610fc657610fa9575b508251908103908111610f975782526a04d6f636b556e69737761760ac1b908188526000805160206120d88339815191528b52898d89205416918d51906000805160206120f88339815191528d830152603982015260398152610d0b81611293565b8215610f76575089905116915189855116865191833b15610f72578e5163450666ab60e11b8152808f0195909552848b01526044840152606483015290919086908390608490829084905af18015610f68579088939291610f3b575b505091610724610d8b9492610d8694511691519251928861071c61153c565b6116b0565b5063ffffffff94858954861c169286610da9816000548c1c16611a2c565b168414610ee0575050909687600098895b876000548b1c1690888c1691821015610e3857637fffffff8a96959493610e0f8b948b610e189560019b8c861615600014610e24578c8293610dfb86611b03565b9560005252600020555b8b60005416611893565b971c169b611868565b9a919293949050610dba565b50919050600052898c528d60002054610e05565b7fae00c540259638f579ebd3eeca58b0ffa10b9b1ab00a7862cae8eb32e04c60688a8987610e94888b968f845490601e81610e74818516611a52565b160616809163ffffffff1916178555600052600285528560002055611a52565b815467ffffffff00000000191690831b67ffffffff0000000016179055600654610ebd906112e7565b80600655600052600781526000828120556000600654918351928352820152a180f35b875162461bcd60e51b81529182018690526030908201527f4d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c656160448201526f1d995cc818d85b88189948185919195960821b6064820152608490fd5b90809296935011610f56578952928590610724610d8b610d67565b634e487b7160e01b8252604189528582fd5b8b513d88823e3d90fd5b8980fd5b8d5162461bcd60e51b8152808e018d905290819061061f90828d0190611355565b634e487b7160e01b885260118c528888fd5b610fbf908c8d3d106104195761040b81836112c5565b508f610ca9565b8e513d8b823e3d90fd5b634e487b7160e01b875260118b52602487fd5b8480fd5b8680fd5b8135815260209182019101610b83565b634e487b7160e01b865260418452602486fd5b634e487b7160e01b855260418352602485fd5b50503461019157606036600319011261019157602090610244611042611278565b6001600160a01b03906107248261105761153c565b169160443593602435911683611893565b5050346101915781600319360112610191576020906001600160a01b036108396114ac565b9050346101bd5760203660031901126101bd578160209360ff923581526005855220541690519015158152f35b919050346101bd57826003193601126101bd576110d56115f6565b91835b8351811015611274576110eb818561130c565b5160018060a01b03807fb5e75f33363faba579acfe081959ecc5e5146fdb7f8fdd04645b64e0213ce40254168551916020917f6e696163696e3a207265736f6c766572206d697373696e67207461726765743a83850152600160fd1b8885015260419085828601528185526080908186019286841067ffffffffffffffff8511176112635750828591818c526338fee7e360e11b82528860848901528b60a489015281607f198961119f60c4820182611355565b0301915afa948b861561125857928a9592611220999895927f88a93678a3692f6789d9546fc621bf7234b101ddb7d4fe479455112831b8aa6898611225575b505050838c526000805160206120d88339815191528252848c20921691826bffffffffffffffffffffffff60a01b8254161790558351928352820152a16112e7565b6110d8565b61124793955084903d8611611250575b61123f82856112c5565b010190611336565b913880806111de565b3d9150611235565b8a51903d90823e3d90fd5b634e487b7160e01b8d52895260248cfd5b8480f35b600435906001600160a01b038216820361128e57565b600080fd5b6060810190811067ffffffffffffffff8211176112af57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff8211176112af57604052565b60001981146112f65760010190565b634e487b7160e01b600052601160045260246000fd5b80518210156113205760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b9081602091031261128e57516001600160a01b038116810361128e5790565b919082519283825260005b848110611381575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201611360565b61139d6115f6565b7fb5e75f33363faba579acfe081959ecc5e5146fdb7f8fdd04645b64e0213ce402546001600160a01b039081169060005b83518110156114a3576113e1818561130c565b5160409081516321f8a72160e01b8152816004820152602080826024818a5afa91821561149857908693929160009261146b575b506000805160206120d883398151915291926000525281808460002054169116149182159261145c575b50506114535761144e906112e7565b6113ce565b50505050600090565b6000205416159050823861143f565b6000805160206120d8833981519152925061149290823d84116109b6576109a881836112c5565b91611415565b84513d6000823e3d90fd5b50505050600190565b6e2232b837b9b4ba2b32b934b334b2b960891b806000526000805160206120d883398151915260205260018060a01b036040600020541690604051906000805160206120f8833981519152602083015260398201526039815261150e81611293565b8115611518575090565b60405162461bcd60e51b81526020600482015290819061061f906024830190611355565b634d694d4360e01b806000526000805160206120d883398151915260205260018060a01b036040600020541690604051906000805160206120f8833981519152602083015260398201526039815261150e81611293565b6f2bb4ba34323930bbab32b934b334b2b960811b806000526000805160206120d883398151915260205260018060a01b036040600020541690604051906000805160206120f8833981519152602083015260398201526039815261150e81611293565b60405160a0810181811067ffffffffffffffff8211176112af5760405260048152602081016080368237815115611320576e2232b837b9b4ba2b32b934b334b2b960891b9052805160011015611320576f2bb4ba34323930bbab32b934b334b2b960811b604082015280516002101561132057634d694d4360e01b6060820152805160031015611320576b29bbb0b82b32b934b334b2b960a11b608082015290565b9081602091031261128e5751801515810361128e5790565b9063ffffffff6003549080602092831c16916000805494836116d78160a098891c16611a2c565b16851461180a578496809583985b8685548a1c16878b169081101561175b57637fffffff8892611739611742936001809d8185161560001461174a57809161171e84611b03565b938d528d5260408c20555b8a546001600160a01b0316611893565b9a1c169a611868565b9990506116e5565b918b52508c8b5260408a2054611729565b505060409586939950829850907fae00c540259638f579ebd3eeca58b0ffa10b9b1ab00a7862cae8eb32e04c6068976117c29295939560035490601e816117a3818516611a52565b160616809163ffffffff19161760035584526002875284842055611a52565b67ffffffff0000000060035491861b169067ffffffff000000001916176003556117ed6006546112e7565b80600655815260078452205583600654918351928352820152a190565b60405162461bcd60e51b815260048101849052603060248201527f4d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c656160448201526f1d995cc818d85b88189948185919195960821b6064820152608490fd5b63ffffffff8091169081146112f65760010190565b919082604091031261128e576020825192015190565b92917f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000193848310156119e857848210156119995760018060a01b031693604090815163f47d33b560e01b94858252600482015260009485602483015283826044818b5afa97881561198f5786979885969793899161196d575b506044939486519889968795865208600484015260248301525afa928315611962579261193857505090565b6119579250803d1061195b575b61194f81836112c5565b81019061187d565b5090565b503d611945565b9051903d90823e3d90fd5b604494506119889150863d881161195b5761194f81836112c5565b909361190c565b84513d88823e3d90fd5b60405162461bcd60e51b815260206004820152602160248201527f5f72696768742073686f756c6420626520696e7369646520746865206669656c6044820152601960fa1b6064820152608490fd5b606460405162461bcd60e51b815260206004820152602060248201527f5f6c6566742073686f756c6420626520696e7369646520746865206669656c646044820152fd5b8015611a4c5760ff81116112f6576001901b9063ffffffff82116112f657565b50600190565b90600163ffffffff809316019182116112f657565b8015611afd5763ffffffff8060035416918260019384805b611a8f575b505050505050600090565b15611aee575b60009084811690818352600260205260408320548514611ae557859115611add575b168015611ac957600019019085611a7f565b634e487b7160e01b82526011600452602482fd5b50601e611ab7565b50505050505090565b8184821603611a955780611a84565b50600090565b80611b2d57507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c90565b60018103611b5a57507f256a6135777eee2fd26f54b8b7037a25439d5235caee224154186d2b8a52e31d90565b60028103611b8757507f1151949895e82ab19924de92c40a3d6f7bcb60d92b00504b8199613683f0c20090565b60038103611bb457507f20121ee811489ff8d61f09fb89e313f14959a0f28bb428a20dba6b0b068b3bdb90565b60048103611be157507f0a89ca6ffa14cc462cfedb842c30ed221a50a3d6bf022a6a57dc82ab24c157c990565b60058103611c0e57507f24ca05c2b5cd42e890d6be94c68d0689f4f21c9cec9c0f13fe41d566dfb5495990565b60068103611c3b57507f1ccb97c932565a92c60156bdba2d08f3bf1377464e025cee765679e604a7315c90565b60078103611c6857507f19156fbd7d1a8bf5cba8909367de1b624534ebab4f0f79e003bccdd1b182bdb490565b60088103611c9557507f261af8c1f0912e465744641409f622d466c3920ac6e5ff37e36604cb11dfff8090565b60098103611cc157507e58459724ff6ca5a1652fcbc3e82b93895cf08e975b19beab3f54c217d1c00790565b600a8103611cee57507f1f04ef20dee48d39984d8eabe768a70eafa6310ad20849d4573c3c40c2ad1e3090565b600b8103611d1b57507f1bea3dec5dab51567ce7e200a30f7ba6d4276aeaa53e2686f962a46c66d511e590565b600c8103611d4857507f0ee0f941e2da4b9e31c3ca97a40d8fa9ce68d97c084177071b3cb46cd3372f0f90565b600d8103611d7557507f1ca9503e8935884501bbaf20be14eb4c46b89772c97b96e3b2ebf3a36a948bbd90565b600e8103611da257507f133a80e30697cd55d8f7d4b0965b7be24057ba5dc3da898ee2187232446cb10890565b600f8103611dcf57507f13e6d8fc88839ed76e182c2a779af5b2c0da9dd18c90427a644f7e148a6253b690565b60108103611dfc57507f1eb16b057a477f4bc8f572ea6bee39561098f78f15bfb3699dcbb7bd8db6185490565b60118103611e2957507f0da2cb16a1ceaabf1c16b838f7a9e3f2a3a3088d9e0a6debaa748114620696ea90565b60128103611e5657507f24a3b3d822420b14b5d8cb6c28a574f01e98ea9e940551d2ebd75cee12649f9d90565b60138103611e8357507f198622acbd783d1b0d9064105b1fc8e4d8889de95c4c519b3f635809fe6afc0590565b60148103611eb057507f29d7ed391256ccc3ea596c86e933b89ff339d25ea8ddced975ae2fe30b5296d490565b60158103611edd57507f19be59f2f0413ce78c0c3703a3a5451b1d7f39629fa33abd11548a76065b296790565b60168103611f0a57507f1ff3f61797e538b70e619310d33f2a063e7eb59104e112e95738da1254dc345390565b60178103611f3757507f10c16ae9959cf8358980d9dd9616e48228737310a10e2b6b731c1a548f036c4890565b60188103611f6457507f0ba433a63174a90ac20992e75e3095496812b652685b5e1a2eae0b1bf4e8fcd190565b60198103611f9157507f019ddb9df2bc98d987d0dfeca9d2b643deafab8f7036562e627c3667266a044c90565b601a8103611fbe57507f2d3c88b23175c5a5565db928414c66d1912b11acf974b2e644caaac04739ce9990565b601b8103611feb57507f2eab55f6ae4e66e32c5189eed5c470840863445760f5ed7e7b69b2a62600f35490565b601c810361201757507e2df37a2642621802383cf952bf4dd1f32e05433beeb1fd41031fb7eace979d90565b601d810361204457507f104aeb41435db66c3e62feccc1d6f5d98d0a0ed75d1374db457cf462e3a1f42790565b601e810361207157507f1f3c6fd858e9a7d4b0d1f38e256a09d81d5a5e3c963987e2d4b814cfab7c6ebb90565b601f0361209c577f2c7a07d20dff79d01fecedc1134284a8d08436606c93693b67e333f671bf69cc90565b60405162461bcd60e51b8152602060048201526013602482015272496e646578206f7574206f6620626f756e647360681b6044820152606490fdfeb5e75f33363faba579acfe081959ecc5e5146fdb7f8fdd04645b64e0213ce4046e696163696e3a206d697373696e6720616464726573733a2000000000000000a2646970667358221220a391fe97e63be187fe89c6f28296380bd58231492dab0ea40d847d28e9cc7dbe64736f6c63430008110033";

type TempestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TempestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Tempest__factory extends ContractFactory {
  constructor(...args: TempestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(overrides?: Overrides & { from?: string }): Promise<Tempest> {
    return super.deploy(overrides || {}) as Promise<Tempest>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Tempest {
    return super.attach(address) as Tempest;
  }
  override connect(signer: Signer): Tempest__factory {
    return super.connect(signer) as Tempest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TempestInterface {
    return new utils.Interface(_abi) as TempestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Tempest {
    return new Contract(address, _abi, signerOrProvider) as Tempest;
  }
}
